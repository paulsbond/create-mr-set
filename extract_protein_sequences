#!/usr/bin/python3

from Bio import SeqIO
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
import os
import shared
import sys

def extract_unique_protein_sequences(pdb, protein_chains):
  chains = {}
  seqin = os.path.join("sequences", "%s.fasta" % pdb)
  seqout = os.path.join(pdb, "protein.fasta")
  for record in SeqIO.parse(seqin, "fasta"):
    sequence = str(record.seq)
    chain = record.id
    if "|" in chain: chain = chain.split("|")[0]
    if ":" in chain: chain = chain.split(":")[1]
    if chain not in protein_chains: continue
    if sequence in chains:
      chains[sequence] += "," + chain
    else:
      chains[sequence] = chain
  records = [SeqRecord(Seq(sequence), id=chains[sequence], description="") for sequence in chains]
  records.sort(key=lambda record: record.id)
  SeqIO.write(records, seqout, "fasta")

if __name__ == "__main__":
  structures = shared.get_structure_dict()
  with open("refine_passed") as f:
    pdbs = [line.strip() for line in f]
  for i in range(len(pdbs)):
    pdb = pdbs[i]
    print("Extracting protein sequences from %s (%d/%d)" % (pdb, i+1, len(pdbs)))
    structure = structures[pdb.upper()]
    # IDs of protein chains with 20+ amino acids
    protein_chains = {c.id for c in structure.chains}
    extract_unique_protein_sequences(pdb, protein_chains)
